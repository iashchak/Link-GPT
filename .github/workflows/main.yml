name: Rust CI
on:
  push:
  release:
    types: [published]

jobs:
  build-native-library:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux-64-bit
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            command: cross
            lib_ext: .so
          - build: windows-64-bit
            os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            command: cross
            lib_ext: .dll
          - build: macos-arm
            os: macos-latest
            target: aarch64-apple-darwin
            command: cargo
            lib_ext: .dylib
          - name: android-arm-v7
            os: ubuntu-latest
            target: armv7-linux-androideabi
            command: cross
            lib_ext: .so
    steps:
      - uses: actions/checkout@v4
        name: Checkout code for ${{ matrix.build }}

      - uses: dtolnay/rust-toolchain@nightly
        name: Set up Rust toolchain for ${{ matrix.build }}
        with:
          targets: ${{ matrix.target }}

      - run: cargo install cross --git https://github.com/cross-rs/cross
        name: Setup cross compilation tool for ${{ matrix.build }}

      - run: ${{ matrix.command }} build --release --target ${{ matrix.target }}
        name: Build native library for ${{ matrix.build }}

      - uses: actions/upload-artifact@v3
        name: Upload native library for ${{ matrix.build }}
        with:
          name: ${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/link_gpt_jni${{ matrix.lib_ext }}
            target/${{ matrix.target }}/release/liblink_gpt_jni${{ matrix.lib_ext }}

  build-java-library:
    runs-on: ubuntu-latest
    needs: build-native-library
    steps:
      - uses: actions/checkout@v4
        name: Checkout code for Java library

      - uses: actions/download-artifact@v3
        name: Download all native libraries
        with:
          path: link_gpt_java/src/main/resources/libs/link_gpt

      - uses: actions/setup-java@v3
        name: Set up JDK 11
        with:
          distribution: temurin
          java-version: 11
          build-root-directory: ./link_gpt_java

      - name: Publish package
        uses: gradle/gradle-build-action@v3
        with:
          arguments: publish
          build-root-directory: ./link_gpt_java
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}